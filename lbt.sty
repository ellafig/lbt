\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{lbt}[2023/12/01 Lua-based templates]

\RequirePackage{luacode}   % and luatextras, luacodeloader etc.?

\begin{luacode*}
  -- Load penlight libraries from vendor directory.
  package.path = package.path .. ';./vendor/?.lua;./vendor/?/init.lua'
  pl = require("pl.import_into")()
  pl.stringx.import()

  -- Load lbt module into global variable lbt.
  lbt = {}                           -- todo check it doesn't exist already
  require('lbt-0-meta')
  require('lbt-1-init')
  require('lbt-2-util')
  require('lbt-3-fn')
  require('lbt-4-api')
  require('lbt-5-err')

  -- Load the builtin templates.
  local register_builtin = function (lua_file)
    local td = require(lua_file)                -- template description
    local path = "Built-in " .. lua_file
    lbt.fn.register_template(td, path)
  end

  register_builtin('lbt-6-lbt-Basic')
  register_builtin('lbt-6-lbt-Questions')
  register_builtin('lbt-6-lbt-WS0')
  register_builtin('lbt-6-lbt-WS1')
  register_builtin('lbt-6-lbt-Play')
  register_builtin('lbt-6-lbt-Letter')
  register_builtin('lbt-6-lbt-CourseNotes')

  require('lbt-7-test')

  lbt.log("lbt-{0,1,2,3,4,5,6,7}-*.lua files have been loaded")
\end{luacode*}

\newenvironment{lbt}%
{\directlua{lbt.api.author_content_collect()}}%
{\directlua{lbt.api.author_content_emit_latex()}}

\newcommand{\lbtDraftModeOn}{\directlua{lbt.api.set_draft_mode(true)}} 
\newcommand{\lbtDraftModeOff}{\directlua{lbt.api.set_draft_mode(false)}} 
\newcommand{\lbtDebugModeOn}{\directlua{lbt.api.set_debug_mode(true)}} 
\newcommand{\lbtDebugModeOff}{\directlua{lbt.api.set_debug_mode(false)}} 

\newcommand{\lbtTemplateDirectory}[1]{\directlua{lbt.api.add_template_directory(#1)}} 

% \newcommand{\lbtResetChapterCounters}{\luaexec{lbt.api.reset_chapter_counters()}}
